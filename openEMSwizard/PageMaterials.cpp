#include "PageMaterials.h"



PageMaterials::PageMaterials(QWizard *parent): QWizardPage(parent)
{

    QVector<material_parameters_struct> *materials_param_list = new QVector<material_parameters_struct>;
    materials_param_list_ptr = materials_param_list;

    MaterialsSettings();


}


bool PageMaterials::validatePage()
{
    SaveToSimScriptBuffer();
    return true;
}


void PageMaterials::SaveToSimScriptBuffer(void)
{
    text_save_to_simscript.clear();
    text_save_to_simscript.append("##<OUTPUT_AUTOGENERATED_PageMaterials>##\n");


    text_save_to_simscript.append("##<END_OUTPUT_AUTOGENERATED_PageMaterials>##\n");
    qDebug("%s", qUtf8Printable(text_save_to_simscript));
}


void PageMaterials::ReadFromSimScriptBuffer(void)
{

}


void PageMaterials::UploadMaterialsToViewer(void)
{

}



void PageMaterials::MaterialsSettings(void)
{

    grid_material = new QGridLayout(this);

    materials_list_widget = new QListWidget(this);
    connect(materials_list_widget, SIGNAL(itemClicked(QListWidgetItem*)), this, SLOT(OnGetSelectedMaterial(QListWidgetItem*)));

    QPushButton *button_add_material = new QPushButton("New", this);
    connect(button_add_material, SIGNAL(released()), this, SLOT(OnAddMaterial()));

    QLabel *statictext_name = new QLabel("name", this);
    name = new QLineEdit(this);
    QLabel *statictext_type = new QLabel("type", this);
    type = new QLineEdit(this);
    QLabel *statictext_epsilon = new QLabel("epsilon", this);
    epsilon = new QLineEdit(this);
    QLabel *statictext_mue = new QLabel("mue", this);
    mue = new QLineEdit(this);
    QLabel *statictext_kappa = new QLabel("kappa", this);
    kappa = new QLineEdit(this);
    QLabel *statictext_sigma = new QLabel("sigma", this);
    sigma = new QLineEdit(this);
    QLabel *statictext_conductivity = new QLabel("conductivity", this);
    conductivity = new QLineEdit(this);
    QLabel *statictext_thickness = new QLabel("thickness", this);
    thickness = new QLineEdit(this);


    grid_material->addWidget(statictext_name, 0, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_type, 1, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_epsilon, 2, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_mue, 3, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_kappa, 4, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_sigma, 5, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_conductivity, 6, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_thickness, 7, 0, Qt::AlignRight);

    grid_material->addWidget(name, 0, 1, Qt::AlignRight);
    grid_material->addWidget(type, 1, 1, Qt::AlignRight);
    grid_material->addWidget(epsilon, 2, 1, Qt::AlignRight);
    grid_material->addWidget(mue, 3, 1, Qt::AlignRight);
    grid_material->addWidget(kappa, 4, 1, Qt::AlignRight);
    grid_material->addWidget(sigma, 5, 1, Qt::AlignRight);
    grid_material->addWidget(conductivity, 6, 1, Qt::AlignRight);
    grid_material->addWidget(thickness, 7, 1, Qt::AlignRight);

    grid_material->addWidget(button_add_material, 8, 1, Qt::AlignRight);

    grid_material->addWidget(materials_list_widget, 0, 2, 7, 3, Qt::AlignRight);

}



void PageMaterials::OnAddMaterial(void)
{
    material_parameters_struct material_tmp;
    material_tmp.name = name->text();
    material_tmp.type = type->text();
    material_tmp.epsilon = epsilon->text();
    material_tmp.mue = mue->text();
    material_tmp.kappa = kappa->text();
    material_tmp.sigma = sigma->text();
    material_tmp.conductivity = conductivity->text();
    material_tmp.thickness = thickness->text();

    materials_param_list_ptr->push_back(material_tmp);

    materials_list_widget->addItem(materials_param_list_ptr->at(materials_param_list_ptr->size()-1).name);
}


void PageMaterials::OnGetSelectedMaterial(QListWidgetItem* item)
{
    material_parameters_struct material_tmp;
    material_tmp = materials_param_list_ptr->at(materials_list_widget->currentRow());

    name->setText(material_tmp.name);
    type->setText(material_tmp.type);
    epsilon->setText(material_tmp.epsilon);
    mue->setText(material_tmp.mue);
    kappa->setText(material_tmp.kappa);
    sigma->setText(material_tmp.sigma);
    conductivity->setText(material_tmp.conductivity);
    thickness->setText(material_tmp.thickness);
}

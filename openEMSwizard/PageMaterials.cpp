#include "PageMaterials.h"



PageMaterials::PageMaterials(QWizard *parent): QWizardPage(parent)
{

    QVector<material_parameters_struct> *materials_param_list = new QVector<material_parameters_struct>;
    materials_param_list_ptr = materials_param_list;

    MaterialsSettings();


}


bool PageMaterials::validatePage()
{
    SaveToSimScriptBuffer();
    return true;
}


void PageMaterials::SaveToSimScriptBuffer(void)
{
    text_save_to_simscript.clear();
    text_save_to_simscript.append("##<OUTPUT_AUTOGENERATED_PageMaterials>##\n");


    text_save_to_simscript.append("##<END_OUTPUT_AUTOGENERATED_PageMaterials>##\n");
    qDebug("%s", qUtf8Printable(text_save_to_simscript));
}


void PageMaterials::ReadFromSimScriptBuffer(void)
{

}


void PageMaterials::UploadMaterialsToViewer(void)
{

}



void PageMaterials::MaterialsSettings(void)
{

    grid_material = new QGridLayout(this);

    materials_list_widget = new QListWidget(this);
    connect(materials_list_widget, SIGNAL(itemClicked(QListWidgetItem*)), this, SLOT(OnGetSelectedMaterial(QListWidgetItem*)));

    QPushButton *button_add_edit_material = new QPushButton("New/Edit", this);
    connect(button_add_edit_material, SIGNAL(released()), this, SLOT(OnAddOrChangeMaterial()));
    QPushButton *button_remove_material = new QPushButton("Remove", this);
    connect(button_remove_material, SIGNAL(released()), this, SLOT(OnRemoveMaterial()));


    rad_but_type_material = new QRadioButton("material", this);
    rad_but_type_metal = new QRadioButton("metal", this);
    rad_but_type_material->setChecked(true);
    connect(rad_but_type_material, SIGNAL(clicked()), this, SLOT(OnSetMaterialType()));
    connect(rad_but_type_metal, SIGNAL(clicked()), this, SLOT(OnSetMaterialType()));

    QLabel *statictext_name = new QLabel("name", this);
    name = new QLineEdit(this);
//    QLabel *statictext_type = new QLabel("type", this);
//    type = new QLineEdit(this);
    QLabel *statictext_epsilon = new QLabel("epsilon", this);
    epsilon = new QLineEdit(this);
    QLabel *statictext_mue = new QLabel("mue", this);
    mue = new QLineEdit(this);
    QLabel *statictext_kappa = new QLabel("kappa", this);
    kappa = new QLineEdit(this);
    QLabel *statictext_sigma = new QLabel("sigma", this);
    sigma = new QLineEdit(this);
    QLabel *statictext_conductivity = new QLabel("conductivity", this);
    conductivity = new QLineEdit(this);
    QLabel *statictext_thickness = new QLabel("thickness", this);
    thickness = new QLineEdit(this);


    grid_material->addWidget(rad_but_type_material, 0, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_name, 1, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_epsilon, 2, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_mue, 3, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_kappa, 4, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_sigma, 5, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_conductivity, 6, 0, Qt::AlignRight);
    grid_material->addWidget(statictext_thickness, 7, 0, Qt::AlignRight);

    grid_material->addWidget(rad_but_type_metal, 0, 1, Qt::AlignRight);
    grid_material->addWidget(name, 1, 1, Qt::AlignRight);
    grid_material->addWidget(epsilon, 2, 1, Qt::AlignRight);
    grid_material->addWidget(mue, 3, 1, Qt::AlignRight);
    grid_material->addWidget(kappa, 4, 1, Qt::AlignRight);
    grid_material->addWidget(sigma, 5, 1, Qt::AlignRight);
    grid_material->addWidget(conductivity, 6, 1, Qt::AlignRight);
    grid_material->addWidget(thickness, 7, 1, Qt::AlignRight);

    grid_material->addWidget(button_add_edit_material, 8, 1, Qt::AlignRight);
    grid_material->addWidget(button_remove_material, 8, 0, Qt::AlignRight);

    grid_material->addWidget(materials_list_widget, 0, 2, 7, 3, Qt::AlignRight);

    OnSetMaterialType();
}



void PageMaterials::OnAddOrChangeMaterial(void)
{
    material_parameters_struct material_tmp;
    material_tmp.name = name->text();
    material_tmp.type = type;
    material_tmp.epsilon = epsilon->text();
    material_tmp.mue = mue->text();
    material_tmp.kappa = kappa->text();
    material_tmp.sigma = sigma->text();
    material_tmp.conductivity = conductivity->text();
    material_tmp.thickness = thickness->text();

    if(!material_tmp.name.isEmpty())
    {
        if(materials_param_list_ptr->empty())
        {
            materials_param_list_ptr->push_back(material_tmp);
            materials_list_widget->addItem(materials_param_list_ptr->at(materials_param_list_ptr->size()-1).name);
            materials_list_widget->setCurrentRow(materials_list_widget->count()-1);
        }
        else if(materials_param_list_ptr->at(materials_list_widget->currentRow()).name != material_tmp.name)
        {
            materials_param_list_ptr->push_back(material_tmp);
            materials_list_widget->addItem(materials_param_list_ptr->at(materials_param_list_ptr->size()-1).name);
            materials_list_widget->setCurrentRow(materials_list_widget->count()-1);
        }
        else if(materials_param_list_ptr->at(materials_list_widget->currentRow()).name == material_tmp.name)
        {
            materials_param_list_ptr->replace(materials_list_widget->currentRow(), material_tmp);
        }
    }
}



void PageMaterials::OnRemoveMaterial(void)
{
    if(!materials_param_list_ptr->empty())
    {
        materials_param_list_ptr->remove(materials_list_widget->currentRow());
        materials_list_widget->takeItem(materials_list_widget->currentRow());
    }
}



void PageMaterials::OnGetSelectedMaterial(QListWidgetItem* item)
{
    material_parameters_struct material_tmp;
    material_tmp = materials_param_list_ptr->at(materials_list_widget->currentRow());

    name->setText(material_tmp.name);
    type = material_tmp.type;
    epsilon->setText(material_tmp.epsilon);
    mue->setText(material_tmp.mue);
    kappa->setText(material_tmp.kappa);
    sigma->setText(material_tmp.sigma);
    conductivity->setText(material_tmp.conductivity);
    thickness->setText(material_tmp.thickness);
    if(!QString::compare(type, "material"))
        rad_but_type_material->setChecked(true);
    else if(!QString::compare(type, "metal"))
        rad_but_type_metal->setChecked(true);
    OnSetMaterialType();
}

void PageMaterials::OnSetMaterialType(void)
{
    if(rad_but_type_material->isChecked())
    {
        epsilon->setEnabled(true);
        mue->setEnabled(true);
        kappa->setEnabled(true);
        sigma->setEnabled(true);
        conductivity->setEnabled(false);
        thickness->setEnabled(false);

        type = "material";
        conductivity->setText("");
        thickness->setText("");
    }
    else if(rad_but_type_metal->isChecked())
    {
        epsilon->setEnabled(false);
        mue->setEnabled(false);
        kappa->setEnabled(false);
        sigma->setEnabled(false);
        conductivity->setEnabled(true);
        thickness->setEnabled(true);

        type = "metal";
        epsilon->setText("");
        mue->setText("");
        kappa->setText("");
        sigma->setText("");
    }
}
